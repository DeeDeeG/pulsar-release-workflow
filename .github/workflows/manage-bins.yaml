# This GitHub Action Workflow will **ONLY** download completed bins and upload them
# to a release, while creating said release.
name: Manage Bins

on:
  workflow_dispatch:

env:
  # Variables needed
  nextPulsarVersion: "null" # Set by 'findNextPulsarVersion' script
  binaryDir: "pulsar-bins" # The directory that should contain finalized binaries
  releasePrLink: "null" # ISNT AUTO SET. **MUST** BE MANUALLY SET

jobs:
  manage-bins:
    runs-on: ubuntu-latest
    steps:
    #### Setup
    - name: Setup NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: latest

    - name: Checkout this Repository
      uses: actions/checkout@v4

    - name: Install this repositories dependencies
      run: npm install

    - name: Setup Git User
      run: echo "TODO" # Stuff & Things?? TODO

    #### Get the new Version
    - name: Clone the pulsar-edit/pulsar repository
      uses: actions/checkout@v4
      with:
        repository: pulsar-edit/pulsar
        path: pulsar

    - name: Find new Version
      run: |
        node ./findNextPulsarVersion \
          --packageLocation "pulsar/package.json" \
          --envVarOutput "nextPulsarVersion"

    #### Manage Bins
    - name: Download bins as they become available
      run: |
        node ./downloadBinsWhenPossible \
          --saveLoc ${{ env.binaryDir }} \
          --releasePrLink ${{ env.releasePrLink }} \
          --githubAuthToken ${{ SECRETS.TODO }} \
          --tag v${{ env.nextPulsarVersion }}

    - name: Move all bins into the top level directory
      # Since the binaries are downloaded into sub folders based on category
      # we first need to move them all up into the current directory
      run: mv */* .
      working-directory: ${{ env.binaryDir }}

    - name: Delete all empty subdirectories (Which all should be)
      run: find . -type d -empty -delete
      working-directory: ${{ env.binaryDir }}

    - name: Generate SHASUMS file
      run: sha256sum * | tee SHA256SUMS.txt
      working-directory: ${{ env.binaryDir }}

    #### Publish Bins
    - name: Create Release & Upload all Bins
      run: |
        node ./createReleaseAndUploadBins \
          --binLoc ${{ env.binaryDir }} \
          --version v${{ env.nextPulsarVersion }} \
          --githubAuthToken ${{ SECRETS.TODO }}
